Вариант 3
Тема:"Система контроля версий CVS."
Выполнили
студенты группы ИБ/б-19-1-о
Кужель Д.Е.
Ипатьев Р.А.
------------------------
1. Определение
CVS (англ. Concurrent Versions System — система одновременных версий) — централизованная система управления версиями, 
популярная в 1990-е — начале 2000-х годов. Хранит историю изменений определённого набора файлов, как правило, исходного кода программного обеспечения, 
и облегчает совместную работу группы людей над одним проектом. Распространяется на условиях лицензии GNU GPL.
3.Основные понятия
Проекты в CVS хранятся в виде модулей, модуль — набор файлов проекта. Сервер CVS может обслуживать несколько модулей; 
все модули хранятся в репозитории. Локальная копия модуля, полученная с помощью CVS-клиента, называется рабочей копией.
Операция check-out — извлечение целого модуля из CVS и создание рабочей копии; check-in — фиксация локальных изменений в репозиторий. 
Операция update — обновление локального проекта из CVS.
Ветвь (англ. branch) — независимое направление модификации проекта, которое может содержать ряд последовательных версий; 
ветвь может развиваться параллельно другим веткам; главная ветвь (англ. main trunk или HEAD) есть всегда.
Ревизия (revision) — одна из версий отдельного файла.
Одна из версий целого продукта — «релиз» (release, термин «версия» в CVS вообще не используется). 
К версии прикрепляется специальная метка (tag), метку можно назначить и отдельному файлу, но это делается редко, 
обычно тегом помечают совокупность файлов определённых ревизий (версий).
2. Основные концепции
CVS использует архитектуру клиент-сервер. Обычно клиент и сервер соединяются через локальную сеть или через Интернет, но могут работать и на одной машине, 
если необходимо вести историю версий локального проекта. Серверное ПО обычно работает под управлением Unix (хотя существует CVS-сервер и для Windows NT), 
тогда как CVS клиенты доступны во всех популярных операционных системах.
Сервер хранит в специальном хранилище (репозитории) текущие версии проекта и историю изменений, а клиент соединяется с ним, чтобы получить нужную ему версию или записать новую. 
Получив с сервера нужную версию (check-out), клиент создаёт локальную копию проекта (или его части) — так называемую рабочую копию. После того, как в файлы, находящиеся в рабочей копии, 
внесены необходимые изменения, они пересылаются на сервер (check-in).
Несколько клиентов могут работать над копиями проекта одновременно. Когда они отправляют результаты, сервер пытается объединить вместе их изменения в хранилище. 
Если это не удаётся, например, в случае, когда два клиента изменили одни и те же строки в определённом файле, сервер не примет изменения от последней операции check-in, 
и сообщит клиенту о конфликте, который должен быть исправлен вручную. Если операция check-in завершилась успешно, то номера версий всех затронутых файлов автоматически увеличиваются, 
и сервер записывает комментарий, дату и имя пользователя в свой журнал.
Клиенты также могут сравнить различные версии файлов, запросить полную историю изменений или получить исторический образ проекта на определённое число или по номеру версии. 
Многие открытые проекты разрешают анонимный доступ на чтение, который впервые был применён в OpenBSD. Это означает, что клиенты могут запрашивать и сравнивать версии файлов без пароля; 
только check-in-операции, ведущие к изменению данных в хранилище, требуют пароль.
Также для синхронизации локальной копии проекта с информацией на сервере клиенты могут использовать команду update, что позволяет избежать повторного скачивания всего проекта.
CVS также может содержать различные ветви проекта. Например, стабильная версия проекта может составлять одну ветвь (англ. branch), в которую вносятся только исправления ошибок, 
тогда как активная разработка может вестись в параллельной ветке, которая включает значительные улучшения или изменения с момента выхода стабильной версии.
CVS использует механизм дельта-компрессии для эффективного хранения различных версий одного и того же файла.